"""
    Информативные комментарии
"""

# Every third item on a discount.
max_discount = 0
for i in range(2, n, 3):
    if price[i] > 0:
        max_discount += price[i]


# Collect all templates between separator char.
templates_list = []
template_item_chars = []
for i in range(1, len(line) - 1):
    if line[i] == separator_char:
        templates_list.append(''.join(template_item_chars))
        template_item_chars = []
    else:
        template_item_chars.append(line[i])
templates_list.append(''.join(template_item_chars))


"""
    Представление намерений
"""

# Trying to pay the bill card.
payment_data = []
pass
payment_response = pay_with_card()


# Checking the availability of BOLT service.
bolt_response = bolt_ping()


"""
    Прояснение
"""

def check_stacked_or_returned(self, bill_response, is_power_up=False):
    """
    Parse status from bill acceptor.
    :param self:
    :param bill_response: response from bill acceptor in json format
    :param is_power_up: must be True if bill acceptor just turned on
    :return:
    """
    try:
        parsed_response = self.parse_response(bill_response)
        bill_status = parsed_response['status']
        pass
    except KeyError:
        pass


# Contours contains data in format [[[x1, y1], [x2, y2], ...], [[x1, y1], [x2, y2], ...]].
contours, hierarchy = cv2.findContours(edged.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)


"""
    Предупреждения о последствиях
"""

# Use on on VKP80_VERSION=2. Other versions don`t support retract paper commands.
device.write(0x2, b"\x1D\x65\x02")


# You need to do 2 seconds pause between requests to the device.
# Otherwise device will be disconnected.
time.sleep(2)
device.reset()


"""
    Усиление
"""

# Don`t change this value. It setup by device specifications.
NOTE_INHIBITS = 56


for i in range(len(sale)):
    # Space symbol must be between good title and it price.
    if sale[i] == ' ':
        delimiter_appeared = True
        continue
    pass


"""
    Комментарии TODO
"""

# TODO. The autogenerated stock number algo will be changed soon.
stock_number = 'IAD' + str(time.time())

# TODO. Add car validation before payment.
car = find_car(stock_number)
payment_response = pay_with_card(car)
